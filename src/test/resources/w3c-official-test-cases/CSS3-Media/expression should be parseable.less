/* expression width should be parseable */
@media all and (width) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: 0 should be parseable */
@media all and (width: 0) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: 0px should be parseable */
@media all and (width: 0px) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: 0em should be parseable */
@media all and (width: 0em) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: -0 should be parseable */
@media all and (width: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression min-width: -0 should be parseable */
@media all and (min-width: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-width: -0 should be parseable */
@media all and (max-width: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: -0cm should be parseable */
@media all and (width: -0cm) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: 1px should be parseable */
@media all and (width: 1px) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: 0.001mm should be parseable */
@media all and (width: 0.001mm) {
  .selector {
    font-size: 3em;
  }
}
/* expression width: 100000px should be parseable */
@media all and (width: 100000px) {
  .selector {
    font-size: 3em;
  }
}
/* expression height should be parseable */
@media all and (height) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: 0 should be parseable */
@media all and (height: 0) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: 0px should be parseable */
@media all and (height: 0px) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: 0em should be parseable */
@media all and (height: 0em) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: -0 should be parseable */
@media all and (height: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression min-height: -0 should be parseable */
@media all and (min-height: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-height: -0 should be parseable */
@media all and (max-height: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: -0cm should be parseable */
@media all and (height: -0cm) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: 1px should be parseable */
@media all and (height: 1px) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: 0.001mm should be parseable */
@media all and (height: 0.001mm) {
  .selector {
    font-size: 3em;
  }
}
/* expression height: 100000px should be parseable */
@media all and (height: 100000px) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width should be parseable */
@media all and (device-width) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: 0 should be parseable */
@media all and (device-width: 0) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: 0px should be parseable */
@media all and (device-width: 0px) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: 0em should be parseable */
@media all and (device-width: 0em) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: -0 should be parseable */
@media all and (device-width: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression min-device-width: -0 should be parseable */
@media all and (min-device-width: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-device-width: -0 should be parseable */
@media all and (max-device-width: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: -0cm should be parseable */
@media all and (device-width: -0cm) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: 1px should be parseable */
@media all and (device-width: 1px) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: 0.001mm should be parseable */
@media all and (device-width: 0.001mm) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-width: 100000px should be parseable */
@media all and (device-width: 100000px) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height should be parseable */
@media all and (device-height) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: 0 should be parseable */
@media all and (device-height: 0) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: 0px should be parseable */
@media all and (device-height: 0px) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: 0em should be parseable */
@media all and (device-height: 0em) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: -0 should be parseable */
@media all and (device-height: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression min-device-height: -0 should be parseable */
@media all and (min-device-height: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-device-height: -0 should be parseable */
@media all and (max-device-height: -0) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: -0cm should be parseable */
@media all and (device-height: -0cm) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: 1px should be parseable */
@media all and (device-height: 1px) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: 0.001mm should be parseable */
@media all and (device-height: 0.001mm) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-height: 100000px should be parseable */
@media all and (device-height: 100000px) {
  .selector {
    font-size: 3em;
  }
}
/* expression orientation should be parseable */
@media all and (orientation) {
  .selector {
    font-size: 3em;
  }
}
/* expression orientation: portrait should be parseable */
@media all and (orientation: portrait) {
  .selector {
    font-size: 3em;
  }
}
/* expression orientation: landscape should be parseable */
@media all and (orientation: landscape) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-aspect-ratio: 1/1 should be parseable */
@media all and (max-aspect-ratio: 1/1) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-aspect-ratio: 1 /1 should be parseable */
@media all and (max-aspect-ratio: 1 /1) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-aspect-ratio: 1 / 1 should be parseable */
@media all and (max-aspect-ratio: 1 / 1) {
  .selector {
    font-size: 3em;
  }
}
/* expression max-aspect-ratio: 1/ 1 should be parseable */
@media all and (max-aspect-ratio: 1/ 1) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-aspect-ratio: 1/1 should be parseable */
@media all and (device-aspect-ratio: 1/1) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-aspect-ratio: 1 /1 should be parseable */
@media all and (device-aspect-ratio: 1 /1) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-aspect-ratio: 1 / 1 should be parseable */
@media all and (device-aspect-ratio: 1 / 1) {
  .selector {
    font-size: 3em;
  }
}
/* expression device-aspect-ratio: 1/ 1 should be parseable */
@media all and (device-aspect-ratio: 1/ 1) {
  .selector {
    font-size: 3em;
  }
}
