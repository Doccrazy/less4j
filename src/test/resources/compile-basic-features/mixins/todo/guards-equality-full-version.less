.mixin(...) {
 catch:all;
}
.mixin(@var) when (@var=-0) {
  declare: minus 0;
}
.mixin(@var) when (@var=0) {
  declare: 0;
}
.mixin(@var) when (@var=-2) {
  declare: -2;
}
.mixin(@var) when (@var=-4) {
  declare: -4;
}
.mixin(@var) when (@var=4) {
  declare: 4;
}
.mixin(@var) when (@var=4px) {
  declare: 4px;
}
.mixin(@var) when (@var=-4px) {
  declare: minus 4px;
}
//this is not less.js compatible: Unable to perform comparison
.mixin(@var) when (@var='wrong') {
  declare: 'wrong';
}
.mixin(@var) when (@var="wrong") {
  declare: "wrong";
}
.mixin(@var) when (@var='value') {
  declare: 'value';
}
.mixin(@var) when (@var="value") {
  declare: "value";
}
.mixin(@var) when (@var=wrong) {
  declare: wrong;
}
.mixin(@var) when (@var=-wrong) {
  declare: -wrong;
}
.mixin(@var) when (@var=identifier) {
  declare: identifier;
}
.mixin(@var) when (@var=-identifier) {
  declare: -identifier;
}
.mixin(@var) when (@var=green) {
  declare: green;
}
.mixin(@var) when (@var=#00ff00) {
  declare: #00ff00;
}
.mixin(@var) when (@var=red) {
  declare: red;
}
.mixin(@var) when (@var=#ff0000) {
  declare: #ff0000;
}

#tryZero {
  .mixin(0);
}
#tryMinusZero {
  .mixin(-0);
}
#tryNegatedNumber {
  .mixin(-4);
}
#tryNumber {
  .mixin(4);
}
#tryNumberPx {
  .mixin(4px);
}
#tryNumberMinuxPx {
  .mixin(-4px);
}
#tryString1 {
  .mixin('value');
}
#tryString2 {
  .mixin("value");
}
#tryIdentifier {
  .mixin(identifier);
}
#tryNegativeIdentifier {
  .mixin(identifier);
}
#tryColor1 {
  .mixin(red);
}
#tryColor2 {
  .mixin(#ff0000);
}
